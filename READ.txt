1. Way to create React Apps
   - npx create-react-app my-app [outdate way]
     npm run start
   - npm create vite@latest
     npm install
     npm run dev

2. React flow and structure
   - index.js
   - App.js
   - components
     - Navbar.js
     - Main.js
     - Footer.js

3. React Router
   - npm install react-router-dom
   - import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
   - import Navbar from './components/Navbar';
   - import Main from './components/Main';
   - import Footer from './components/Footer';
   - import About from './components/About';
   - import Contact from './components/Contact';
   - import Error from './components/Error';

4. Virtual DOM
   - React creates a virtual DOM
   - React compares the virtual DOM to the real DOM
   - React updates the real DOM to match the virtual DOM

5. React Fiber
   - React Fiber is a reimplementation of React's core algorithm
   - React Fiber is a new architecture for React
   - React Fiber is a new way to build user interfaces
   - React Fiber is a new way to handle state changes

6. Reconciliation
   - Reconciliation is the process of comparing the virtual DOM to the real DOM
   - Reconciliation is a way to optimize the performance of React
   - Reconciliation is a way to make React faster
   - Reconciliation is a way to make React more efficient

7. React Hooks
   - useState
   - useEffect
   - useContext
   - useReducer
   - useCallback
   - useMemo
   - useRef 
   - useImperativeHandle
   - useLayoutEffect
   - useDebugValue 

7. React Context
   - React Context is a way to pass data through the component tree without having to pass props down manually at every level.

8. Interview Question -- React Specific
   - unoptimized way
      const addValue = () => {
         setCounter(counter + 1);
         setCounter(counter + 1);
         setCounter(counter + 1);
         setCounter(counter + 1);
      };
   - Optimized way [prevCounter give the prev current count value]
      const addValue = () => {
         setCounter((prevCounter) => prevCounter + 1);
         setCounter((prevCounter) => prevCounter + 1);
         setCounter((prevCounter) => prevCounter + 1);
         setCounter((prevCounter) => prevCounter + 1);
      };
   - DO Run both the scenerio